@model CalendarioDiplomados.Models.ViewModels.ParticipantesMoverVm
<h2>Esta Seguro de que desea mover estos participantes del grupo @Model.nombreGrupo ?</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.grupoDestID);

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.grupoSrcID)
        
        <div class="form-group">
            @Html.Label("A Grupo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.grupoDestID, (IEnumerable<SelectListItem>)ViewBag.grupoDestID, "Seleccione un grupo..", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.grupoDestID, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (var i = 0; i < Model.participantes.Count(); i++)
        {
           @Html.HiddenFor(m => Model.participantes[i].ID)
           @Html.HiddenFor(m => Model.participantes[i].cedula)
           @Html.HiddenFor(m => Model.participantes[i].nombre)

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnMover" value="Mover" class="btn btn-danger" />
            </div>
        </div>
    </div>

}

<table class="table">
    <tr>
        <th>
            Cedula
        </th>
        <th>
            Nombre
        </th>
    </tr>

    @for (var i = 0; i < Model.participantes.Count(); i++)
    {

        <tr>
            <td>
                @Html.HiddenFor(m => Model.participantes[i].ID)
                @Html.DisplayFor(m => Model.participantes[i].cedula)
            </td>
            <td>
                @Html.DisplayFor(m => Model.participantes[i].nombre)
            </td>
        </tr>
    }


</table>








